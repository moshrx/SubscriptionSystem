{"ast":null,"code":"var _jsxFileName = \"D:\\\\Files\\\\college files\\\\New folder\\\\snailmail\\\\SubscriptionSystem\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Dashboard from './components/Dashboard';\nimport './App.css'; // Import the CSS file\nimport ForgotPassword from './components/ForgotPassword';\nimport ResetPasswordForm from './components/ResetPasswordForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // Helper function to check if the user is logged in\n  const isAuthenticated = () => {\n    return localStorage.getItem('token') !== null;\n  };\n  const [auth, setAuth] = useState(null); // To track authentication\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {\n          setAuth: setAuth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/forgot-password\",\n        element: /*#__PURE__*/_jsxDEV(ForgotPassword, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 57\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/reset-password\",\n        element: /*#__PURE__*/_jsxDEV(ResetPasswordForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 56\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/dashboard\",\n        element: isAuthenticated() ? /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 50\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 66\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"RPpgZIbgRJLKro8xQhJyVd9Lnz8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Routes","Navigate","Login","Register","Dashboard","ForgotPassword","ResetPasswordForm","jsxDEV","_jsxDEV","App","_s","isAuthenticated","localStorage","getItem","auth","setAuth","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["D:/Files/college files/New folder/snailmail/SubscriptionSystem/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\r\nimport Login from './components/Login';\r\nimport Register from './components/Register';\r\nimport Dashboard from './components/Dashboard';\r\nimport './App.css'; // Import the CSS file\r\nimport ForgotPassword from './components/ForgotPassword';\r\nimport ResetPasswordForm from './components/ResetPasswordForm';\r\nconst App = () => {\r\n    // Helper function to check if the user is logged in\r\n    const isAuthenticated = () => {\r\n        return localStorage.getItem('token') !== null;\r\n    };\r\n\r\n    const [auth, setAuth] = useState(null); // To track authentication\r\n\r\n    return (\r\n        <Router>\r\n            <Routes>\r\n                <Route path=\"/login\" element={<Login setAuth={setAuth} />} />\r\n                <Route path=\"/register\" element={<Register />} />\r\n                <Route path='/forgot-password' element={<ForgotPassword />} />\r\n                <Route path='/reset-password' element={<ResetPasswordForm />} />\r\n                \r\n                {/* Protect dashboard route */}\r\n                <Route\r\n                    path=\"/dashboard\"\r\n                    element={isAuthenticated() ? <Dashboard /> : <Navigate to=\"/login\" />}\r\n                />\r\n                \r\n                {/* Redirect to login if accessing root path */}\r\n                <Route path=\"/\" element={<Navigate to=\"/login\" />} />\r\n            </Routes>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}