{"ast":null,"code":"var _jsxFileName = \"D:\\\\Files\\\\college files\\\\New folder\\\\snailmail\\\\SubscriptionSystem\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport api from '../api'; // Assuming you have an API handler for making requests\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [isPremium, setIsPremium] = useState(false);\n  const [subscriptions, setSubscriptions] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      fetchUserData(token);\n    } else {\n      window.location.href = '/login'; // Redirect to login if not logged in\n    }\n  }, []);\n  const fetchUserData = async token => {\n    try {\n      // Fetch user details (including premium status)\n      const {\n        data: userData\n      } = await api.getUserDetails(token);\n      setUsername(userData.name);\n      setIsPremium(userData.isPremium);\n\n      // Fetch subscriptions\n      const {\n        data: subscriptionsData\n      } = await api.getUserSubscriptions(userData._id, token);\n      setSubscriptions(subscriptionsData);\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleLogout = () => {\n    // Clear the token and username from localStorage\n    localStorage.removeItem('token');\n    localStorage.removeItem('username');\n\n    // Redirect to login page\n    window.location.href = '/login';\n  };\n  const isBasicUserMaxedOut = () => !isPremium && subscriptions.length >= 3;\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Welcome, \", username, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: isBasicUserMaxedOut() ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You have reached the maximum number of subscriptions for basic users. Upgrade to premium for unlimited subscriptions.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => alert('Subscribe to a new app'),\n        children: \"Subscribe to New App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"9m/BYNIHhI7WjvElsyiRhTK4Wvw=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","api","jsxDEV","_jsxDEV","Dashboard","_s","username","setUsername","isPremium","setIsPremium","subscriptions","setSubscriptions","isLoading","setIsLoading","token","localStorage","getItem","fetchUserData","window","location","href","data","userData","getUserDetails","name","subscriptionsData","getUserSubscriptions","_id","error","console","handleLogout","removeItem","isBasicUserMaxedOut","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","alert","_c","$RefreshReg$"],"sources":["D:/Files/college files/New folder/snailmail/SubscriptionSystem/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport api from '../api'; // Assuming you have an API handler for making requests\r\n\r\nconst Dashboard = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [isPremium, setIsPremium] = useState(false);\r\n    const [subscriptions, setSubscriptions] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token');\r\n\r\n        if (token) {\r\n            fetchUserData(token);\r\n        } else {\r\n            window.location.href = '/login'; // Redirect to login if not logged in\r\n        }\r\n    }, []);\r\n\r\n    const fetchUserData = async (token) => {\r\n        try {\r\n            // Fetch user details (including premium status)\r\n            const { data: userData } = await api.getUserDetails(token);\r\n            setUsername(userData.name);\r\n            setIsPremium(userData.isPremium);\r\n\r\n            // Fetch subscriptions\r\n            const { data: subscriptionsData } = await api.getUserSubscriptions(userData._id, token);\r\n            setSubscriptions(subscriptionsData);\r\n        } catch (error) {\r\n            console.error('Error fetching user data:', error);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleLogout = () => {\r\n        // Clear the token and username from localStorage\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('username');\r\n\r\n        // Redirect to login page\r\n        window.location.href = '/login';\r\n    };\r\n\r\n    const isBasicUserMaxedOut = () => !isPremium && subscriptions.length >= 3;\r\n\r\n    if (isLoading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"dashboard\">\r\n            <div className=\"dashboard-header\">\r\n                <h1>Welcome, {username}!</h1>\r\n                <button onClick={handleLogout}>Logout</button>\r\n            </div>\r\n\r\n            <div className=\"dashboard-content\">\r\n                {isBasicUserMaxedOut() ? (\r\n                    <p>You have reached the maximum number of subscriptions for basic users. Upgrade to premium for unlimited subscriptions.</p>\r\n                ) : (\r\n                    <button onClick={() => alert('Subscribe to a new app')}>Subscribe to New App</button>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}