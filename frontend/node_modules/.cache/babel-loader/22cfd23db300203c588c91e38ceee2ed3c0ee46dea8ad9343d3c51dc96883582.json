{"ast":null,"code":"var _jsxFileName = \"D:\\\\Files\\\\college files\\\\New folder\\\\snailmail\\\\SubscriptionSystem\\\\frontend\\\\src\\\\components\\\\ResetPasswordForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPasswordForm = () => {\n  _s();\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const {\n    token\n  } = useParams(); // Get token from URL\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage(\"Passwords do not match!\");\n      return;\n    }\n    try {\n      console.log(\"Sending password reset request with token:\", token);\n      const response = await axios.post(`http://localhost:5000/api/auth/reset/${token}`, {\n        password\n      });\n      console.log(\"Response received:\", response);\n      setMessage(response.data.message || \"Password successfully reset!\");\n    } catch (error) {\n      console.error(\"Error resetting password:\", error.response.data); // Log the full error response\n      setMessage(\"Error resetting password. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reset-password-form min-h-screen flex items-center justify-center bg-gray-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white shadow-lg rounded-lg p-8 w-full max-w-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold text-center mb-6 text-gray-800\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-green-600 text-center mb-4\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 mb-2\",\n            children: \"New Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true,\n            className: \"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring focus:ring-blue-200 focus:outline-none\",\n            placeholder: \"Enter new password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 mb-2\",\n            children: \"Confirm Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value),\n            required: true,\n            className: \"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring focus:ring-blue-200 focus:outline-none\",\n            placeholder: \"Confirm new password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"w-full bg-blue-600 text-white py-2 rounded-lg hover:bg-blue-700 transition-colors duration-300\",\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(ResetPasswordForm, \"2B6WY19o4ndFy4WGmDzvepPkvI0=\", false, function () {\n  return [useParams];\n});\n_c = ResetPasswordForm;\nexport default ResetPasswordForm;\nvar _c;\n$RefreshReg$(_c, \"ResetPasswordForm\");","map":{"version":3,"names":["React","useState","axios","useParams","jsxDEV","_jsxDEV","ResetPasswordForm","_s","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","token","handleSubmit","e","preventDefault","console","log","response","post","data","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","placeholder","_c","$RefreshReg$"],"sources":["D:/Files/college files/New folder/snailmail/SubscriptionSystem/frontend/src/components/ResetPasswordForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst ResetPasswordForm = () => {\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const { token } = useParams(); // Get token from URL\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (password !== confirmPassword) {\r\n            setMessage(\"Passwords do not match!\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            console.log(\"Sending password reset request with token:\", token);\r\n            const response = await axios.post(`http://localhost:5000/api/auth/reset/${token}`, { password });\r\n            console.log(\"Response received:\", response);\r\n            setMessage(response.data.message || \"Password successfully reset!\");\r\n        } catch (error) {\r\n            console.error(\"Error resetting password:\", error.response.data); // Log the full error response\r\n            setMessage(\"Error resetting password. Please try again.\");\r\n        }        \r\n        \r\n    };\r\n\r\n    return (\r\n        <div className=\"reset-password-form min-h-screen flex items-center justify-center bg-gray-100\">\r\n          <div className=\"bg-white shadow-lg rounded-lg p-8 w-full max-w-md\">\r\n            <h2 className=\"text-2xl font-bold text-center mb-6 text-gray-800\">Reset Password</h2>\r\n            {message && <p className=\"text-green-600 text-center mb-4\">{message}</p>}\r\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n              <div>\r\n                <label className=\"block text-gray-700 mb-2\">New Password:</label>\r\n                <input \r\n                  type=\"password\" \r\n                  value={password} \r\n                  onChange={(e) => setPassword(e.target.value)} \r\n                  required \r\n                  className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring focus:ring-blue-200 focus:outline-none\"\r\n                  placeholder=\"Enter new password\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-gray-700 mb-2\">Confirm Password:</label>\r\n                <input \r\n                  type=\"password\" \r\n                  value={confirmPassword} \r\n                  onChange={(e) => setConfirmPassword(e.target.value)} \r\n                  required \r\n                  className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring focus:ring-blue-200 focus:outline-none\"\r\n                  placeholder=\"Confirm new password\"\r\n                />\r\n              </div>\r\n              <button \r\n                type=\"submit\" \r\n                className=\"w-full bg-blue-600 text-white py-2 rounded-lg hover:bg-blue-700 transition-colors duration-300\"\r\n              >\r\n                Reset Password\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      );\r\n      \r\n};\r\n\r\nexport default ResetPasswordForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}